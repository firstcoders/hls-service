AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >
  This serverless application deploys a couple of Lambda function and an API Gateway to your AWS account
  that segments a source audio file into HLS segments stores these in a bucket and then serves the resulting m3u8 file.

Conditions:
  CreateBucket: !Not [!Equals [!Ref ExistingBucket, true]]
  # HasAuthorizer: !Not [!Equals [!Ref AuthorizerArn, '']]

Parameters:
  # todo more validation
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
  LogLevel:
    Type: String
    Description: The log level
    Default: 'error'
    AllowedValues:
      - debug
      - info
      - error
  StageName:
    Type: String
    Description: The api gateway stage name
    Default: 'prd'
  AllowedSamplerates:
    Type: CommaDelimitedList
    Description: Comma-delimited list of allowed sample rates
    Default: '22050'
  AllowedBitrates:
    Type: CommaDelimitedList
    Description: Comma-delimited list of allowed bitrates
    Default: '128'
  AllowedFormats:
    Type: CommaDelimitedList
    Description: Comma-delimited list of of allowed formats
    Default: 'mp3'
    # AllowedPattern: ^((mp3|wav|m4a|ogg),?)+$
    # NOTE: AllowedValues Doesnt work with CommaDelimitedList
    # @see https://stackoverflow.com/questions/62475499/selecting-multiple-values-from-dropdownlist-in-cloudformation-template
    # AllowedValues:
    #   - wav
    #   - mp3
    #   - ogg
    #   - m4a
  AllowedSegmentDuration:
    Type: CommaDelimitedList
    Description: Comma-delimited list of of allowed segment duration
    Default: '5'
  AudioCacheTtl:
    Type: Number
    Description: Determines how long unused processed audio is held before its removed from the audio bucket. Default 30 days.
    Default: '2592000'
  S3MaxCacheAge:
    Type: Number
    Description: The max-age cache header given to the audio objects in S3. Default 30 days.
    Default: '2592000'
  AudioToolsLayerArn:
    Type: String
    Description: The arn of the lambda layer containing ffmpeg & lame static binaries
  BucketName:
    Type: String
    Description: The name of the audio Bucket used for the cache
  ExistingBucket:
    Type: String
    Description: Whether to create the audio bucket
    AllowedValues:
      - true
      - false
    Default: false
  SignedUrlExpirySec:
    Type: String
    Description: The duration of the signed urls to the audio
    Default: 900
  # ReservedConcurrentExecutions:
  #   Type: Number
  #   Description: The number of reserved concurrent executions for each lambda
  #   Default: '100'
  AllowedAudioOrigins:
    Type: CommaDelimitedList
    Description: Comma-delimited list of origins from which the service can fetch audio
    Default: '*'
  CORSAllowedOrigins:
    Type: CommaDelimitedList
    Description: The allowed origin header value to return
    Default: ''
  AudioOutputMaxDuration:
    Type: Number
    Description: The maximum output duration (in seconds)
    Default: '600'
  AuthorizerArn:
    Type: String
    Description: The ARN of a lambda authorizer
    Default: ''

Globals:
  # https://github.com/aws/serverless-application-model/issues/191
  # https://github.com/aws/chalice/issues/1655
  Api:
    OpenApiVersion: 3.0.1
  Function:
    Timeout: 3
    Runtime: nodejs18.x
    MemorySize: 256
    CodeUri: src
    # ReservedConcurrentExecutions: !Ref ReservedConcurrentExecutions
    Environment:
      Variables:
        LOG_LEVEL: !Ref LogLevel
        AUDIO_BUCKET_NAME: !Ref BucketName
        DYNAMODB_TABLE_M3U8FILE: !Ref M3u8FileTable
        ALLOWED_SAMPLE_RATES: !Join [',', !Ref AllowedSamplerates]
        ALLOWED_FORMATS: !Join [',', !Ref AllowedFormats]
        ALLOWED_BITRATES: !Join [',', !Ref AllowedBitrates]
        ALLOWED_SEGMENT_DURATION: !Join [',', !Ref AllowedSegmentDuration]
        AUDIO_CACHE_TTL: !Ref AudioCacheTtl
        S3_CACHE_MAX_AGE: !Ref S3MaxCacheAge
        ALLOWED_AUDIO_ORIGINS: !Join [',', !Ref AllowedAudioOrigins]
        CORS_ALLOWED_ORIGIN: !Join [',', !Ref CORSAllowedOrigins]
        SIGNED_URL_EXPIRY_SEC: !Ref SignedUrlExpirySec
        AUDIO_OUTPUT_MAX_DURATION: !Ref AudioOutputMaxDuration
        S3_FOLDER_PREFIX: 'hls-srv'

Resources:
  ServiceApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      EndpointConfiguration:
        Type: REGIONAL
      # https://github.com/aws/serverless-application-model/releases/tag/v1.46.0
      # https://github.com/aws/serverless-application-model/pull/2298
      ApiKeySourceType: AUTHORIZER
      Auth:
        DefaultAuthorizer: Authorizer
        AddDefaultAuthorizerToCorsPreflight: false
        Authorizers:
          Authorizer:
            FunctionArn: !Ref AuthorizerArn
            ReauthorizeEvery: 3600
      Cors:
        AllowMethods: "'POST, GET'"
        AllowHeaders: "'Authorization'"
        AllowOrigin: "'*'"
        MaxAge: "'86400'"
      GatewayResponses:
        DEFAULT_4XX:
          ResponseParameters:
            Headers:
              Access-Control-Expose-Headers: "'*'"
              Access-Control-Allow-Origin: "'*'"
        DEFAULT_5XX:
          ResponseParameters:
            Headers:
              Access-Control-Expose-Headers: "'*'"
              Access-Control-Allow-Origin: "'*'"

  # ********************************* Functions *********************************

  GetM3u8Function:
    Type: AWS::Serverless::Function
    Properties:
      Description: Gets or generates a m3u8 file given a wav
      Handler: handlers/getM3u8.handler
      Timeout: 30
      Events:
        GetM3u8:
          Type: Api
          Properties:
            RestApiId: !Ref ServiceApi
            Path: /hls
            Method: get
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref BucketName
        - DynamoDBCrudPolicy:
            TableName: !Ref M3u8FileTable
        - LambdaInvokePolicy:
            FunctionName: !Ref CreateM3u8Function
      Environment:
        Variables:
          LAMBDA_CREATE_M3U8_ARN: !GetAtt CreateM3u8Function.Arn
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        OutExtension:
          - .js=.mjs
        Target: 'es2020'
        Sourcemap: false
        EntryPoints:
          - handlers/getM3u8.js
        External:
          - '@aws-sdk'
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  CreateM3u8Function:
    Type: AWS::Serverless::Function
    Properties:
      Description: Generates a m3u8 file given a wav
      MemorySize: 4096
      Timeout: 300
      Handler: handlers/createM3u8.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref M3u8FileTable
        - S3CrudPolicy:
            BucketName: !Ref BucketName
      Layers:
        - !Ref AudioToolsLayerArn
      Environment:
        Variables:
          FFMPEG_BIN_PATH: /opt/bin/ffmpeg
          LAME_BIN_PATH: /opt/bin/lame
          SOX_BIN_PATH: /opt/bin/sox
          FFPROBE_BIN_PATH: /opt/bin/ffprobe
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        OutExtension:
          - .js=.mjs
        Target: 'es2020'
        Sourcemap: false
        EntryPoints:
          - handlers/createM3u8.js
        External:
          - '@aws-sdk'
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  PurgeObjectsFromS3Function:
    Type: AWS::Serverless::Function
    Properties:
      Description: Removes audio from the audio bucket when the corresponding record is deleted from dynamodb
      Handler: handlers/purgeObjects.handler
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt M3u8FileTable.StreamArn
            BatchSize: 100
            StartingPosition: LATEST
            FilterCriteria:
              Filters:
                - Pattern: '{"eventName": ["REMOVE"]}'
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref BucketName
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        OutExtension:
          - .js=.mjs
        Target: 'es2020'
        Sourcemap: false
        EntryPoints:
          - handlers/purgeObjects.js
        External:
          - '@aws-sdk'
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  # ********************************* General Resources *********************************
  AudioBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Condition: CreateBucket
    Properties:
      # https://stackoverflow.com/questions/54897459/how-to-set-semi-random-name-for-s3-bucket-using-cloud-formation
      BucketName: !Ref BucketName
      # TODO review
      # https://www.serverless.com/blog/cors-api-gateway-survival-guide
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins: !Ref CORSAllowedOrigins
            AllowedMethods:
              - GET
              - HEAD
            AllowedHeaders:
              - '*'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  M3u8FileTable:
    Type: 'AWS::DynamoDB::Table'
    DeletionPolicy: Delete
    Properties:
      AttributeDefinitions:
        - AttributeName: objectKey
          AttributeType: S
      KeySchema:
        - AttributeName: objectKey
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      # Dont provide one and aws will generate a unique table name
      # https://serverfault.com/questions/898821/tradeoffs-for-naming-dynamodb-tables-with-cloudformation
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      StreamSpecification:
        StreamViewType: KEYS_ONLY

Outputs:
  ApiId:
    Description: 'The API Gateway id'
    Value: !Ref ServiceApi
  ServiceApi:
    Description: 'API Gateway endpoint URL'
    Value: !Sub 'https://${ServiceApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/'
  GetM3u8FunctionArn:
    Description: The ARN of the getwaveform function
    Value: !GetAtt GetM3u8Function.Arn
  GetM3u8FunctionRoleArn:
    Description: The ARN of the getwaveform function role
    Value: !GetAtt GetM3u8FunctionRole.Arn
  CreateM3u8FunctionArn:
    Description: The ARN of the createwaveform function
    Value: !GetAtt CreateM3u8Function.Arn
  CreateM3u8FunctionRoleArn:
    Description: The ARN of the createwaveform function role
    Value: !GetAtt CreateM3u8FunctionRole.Arn
  PurgeObjectsFromS3FunctionArn:
    Description: The ARN of the purge s3 objects function
    Value: !GetAtt PurgeObjectsFromS3Function.Arn
  PurgeObjectsFromS3FunctionRoleArn:
    Description: The ARN of the purge s3 objects function role
    Value: !GetAtt PurgeObjectsFromS3FunctionRole.Arn

Metadata:
  AWS::ServerlessRepo::Application:
    Name: fc-hls-service
    Description: >
      A serverless micro-service to transcode audio into HLS format.
    Author: Team First Coders
    ReadmeUrl: README.md
    SpdxLicenseId: AGPL-3.0-or-later
    LicenseUrl: LICENSE
    Labels: ['ffmpeg', 'hls', 'm3u8', 'transcode']
    HomePageUrl: https://github.com/firstcoders/hls-service
    SourceCodeUrl: https://github.com/firstcoders/hls-service
    SemanticVersion: 1.0.0 # overwritten by sam publish cli command
